generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  createdAt            DateTime          @default(now())

  id                   Bytes             @id
  username             String            @unique

  identityKey          Bytes             @unique
  encryptionKey        Bytes             @unique
  encryptedKeys        UserEncryptedKeys?

  friendRequests       FriendRequest[]   @relation(name: "recipient")
  sentFriendRequests   FriendRequest[]   @relation(name: "sender")

  createdAlbums        Album[]           @relation(name: "createdAlbums")
  sharedAlbums         Album[]           @relation(name: "sharedAlbums")
  pinnedAlbums         Album[]           @relation(name: "pinnedAlbums")

  uploadedImages       Image[]
  submissions          Submission[]

  imageKeys            ImageKey[]
}

model UserEncryptedKeys {
  userId            Bytes   @id
  user              User    @relation(fields: [userId], references: [id])

  passwordSalt      Bytes

  identityKey       Bytes
  identityKeyIv     Bytes

  encryptionKey     Bytes
  encryptionKeyIv   Bytes
}

model FriendRequest {
  @@id([senderId, recipientId])

  createdAt     DateTime    @default(now())

  accepted      Boolean     @default(false)

  senderId      Bytes
  sender        User        @relation(name: "sender", fields: [senderId], references: [id])

  recipientId   Bytes
  recipient     User        @relation(name: "recipient", fields: [recipientId], references: [id])
}

enum AlbumType {
  PRIVATE
  PUBLIC
}

model Album {
  id                 String         @id @default(uuid())
  createdAt          DateTime       @default(now())

  creatorId          Bytes
  creator            User           @relation(name: "createdAlbums", fields: [creatorId], references: [id])

  name               String
  type               AlbumType
  
  users              User[]         @relation(name: "sharedAlbums")
  images             Image[]
  
  pinnedBy           User[]         @relation(name: "pinnedAlbums")

  allowSubmissions   Boolean
  submissions        Submission[]
}

model ImageKey {
  @@id([userId, imageId])

  userId         Bytes
  user           User     @relation(fields: [userId], references: [id])

  imageId        String
  image          Image    @relation(fields: [imageId], references: [id])

  encryptedKey   Bytes
}

model Image {
  id                 String       @id @default(uuid())
  createdAt          DateTime     @default(now())

  imageDate          DateTime
  imageType          String
  imageExt           String
  
  creatorId          Bytes
  creator            User         @relation(fields: [creatorId], references: [id])

  albumId            String
  album              Album        @relation(fields: [albumId], references: [id])

  isSubmission       Boolean

  isEncrypted        Boolean
  keys               ImageKey[]
}

model Submission {
  id          String     @id @default(uuid())
  createdAt   DateTime   @default(now())

  imageDate   DateTime
  imageType   String
  imageExt    String
  
  creatorId   Bytes
  creator     User       @relation(fields: [creatorId], references: [id])

  albumId     String
  album       Album      @relation(fields: [albumId], references: [id])
}
